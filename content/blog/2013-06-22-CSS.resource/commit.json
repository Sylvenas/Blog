{"compress":true,"commitItems":[["abec4565-23e1-408d-b01e-351dc9095387",1526549044369,"---\ntitle:  \"CSS基础知识\"\nauthor: [sylvenas]\ncategories: 'CSS'\nimg: './img/2013-06-12.jpeg'\n---\n### CSS使用方法\n\n* link 标记\nlink必须放在head元素中，绝不能放在其他元素内部,因为link标记用来链接外部的样式，所以也被成为外部样式表\n``` html\n<link rel = 'stylesheet' type = 'text/css' href = 'main.css'/>\n```\n* style 元素\n可以使用style元素包含样式表，它在文档中单独出现，因为这个样式表嵌套在文档中，所以也被成为文档样式表或者嵌套样式表\n``` html\n<style>\n    p{\n        color:#000;\n    }\n</style>\n```\n* @import\n与link类似，`@import` 用于指示Web浏览器家在一个外部样式表，并在表现HTML文档时使用其样式，唯一的区别在于命令的具体语法和位置。\n\n可以看到，`@import`出现在style容器中，它必须放在这里，也就是要放在其他CSS规则之前，否则将根本不起作用，考虑下面的例子：\n``` html\n<style>\n    p{\n        color:#000;\n    }\n    @import url('...')\n</style>\n```\n这里外部引入的css将不会有任何作用，因为放在了其他的规则之前\n\n* 内联样式\n如果你只是想为单个元素设定一些样式，而不需要嵌套或者外部样式表，就可以使用HTML的`style`属性来设置一个内联样式(inline style),例如\n``` html\n<p style=\"color:red\">hello world</p>\n```\nstyle属性可以应用在body内部出现的任何HTML元素上\n\n### CSS选择器\n* 通配选择器： * 选择全部的元素\n* 元素选择器： div span\n* 类选择器和ID选择器：   #，id\n* 多类选择器： .class1.class2 选择同时包含两种类的元素\n* 属性选择器：\n    * h1[class]{color:#000}  选择包含class属性的h1\n    * h1[title]{color:#000} 选择包含title属性的h1\n    * 多属性选择器： a[href][title]{color:#fff} 同时包含href和title属性的a\n    * = 具体属性值选择器：a[href='http://www.baidu.com']{color:###} 选择href属性值等于'http://www.baidu.com'的元素，即：选择具体属性值的元素\n    * ～= 部分属性值选择器：img[title~='hello']{…} 选择所有title属性中有hello字符串的img,并且要求hello字符串两边都是空格，即：属性值部分包含就可以,但是要求该值两边都是空格\n    * |= 部分属性选择器：img[title |= 'hello']{…} 选择所有title属性值是以'hello’或者’hello-' 为开头的img,即：属性值必须以某个字符串或者字符串+'-'开头,典型的应用场景是匹配语言简写代码，如'zh-CN','zh-TW'\n    * ^=  部分属性选择器：img[title ^= 'hello']{…} 选择所有title属性值是以hello为开头的img,即：属性值必须以某个字符串开头\n    * $=  部分属性选择器：img[title $= 'hello']{…} 选择所有title属性值是以hello为结尾的img,即：属性值必须以某个字符串结尾\n    * *=   部分属性选择器：img[title *= 'hello']{…} 选择所有title属性值中包含hello字符串的的img, 即：属性值包含某个字符串就可以了,不要求是空格或者其他\n* 父子选择器\n    * 祖先与后代：div p{...} 选择div内部的看所有的p元素，不论嵌套多少层\n    * 父与子：div>p{...} 选择div元素内直接嵌套的p元素，要求是直接嵌套\n    * 相邻兄弟：div+p{...} 选择紧跟在div元素后面的p元素，要求必须是紧接着并且拥有同一个父元素，中间不能有其他元素，例如家里的老大和老二，老三和老四，老大和老三则不行\n    * 通用兄弟：div~p{...} 选择div元素后面的p元素，要求他们拥有同一个父元素，但是不要求div和p是紧挨着的，例如:老大和老二，老大和老四，都是可以的\n* 伪类\n    伪类可以为某些元素的状态指定特定的样式，换句话说会根据另外某种条件而非文档结构向文档中的某些元素应用样式\n\n    **静态伪类**：一般除了第一次显示之后，不会再次改变文档的样式\n    * :link 用来选中尚未访问的超链接，包括那些已经给定了其他伪类选择器的链接，为了正确渲染链接元素的样式，:link伪类选择器一般应该放在其他选择器的前面\n    * :visited 用来选择已经访问过的超链接\n    * :first-child 选取属于其父元素的首个子元素的指定选择器,而绝非字面意思上的，该元素下的第一个元素\n    **动态伪类**：可以根据用户的行为改变文档的外观\n    * :hover 鼠标停留在某个元素上的时候，该元素`:hover`伪类中的样式就会应用到该元素上\n    * :focus 指示当前拥有输入焦点的元素，一般为`input`,`select`之类的元素，拥有了输入焦点\n    * :active 被用户激活的元素，例如:当鼠标指针停留在一个超链接上，如果用户点击了鼠标，就是激活了这个超链接\n\n> 对于伪类，可以注意\"link-visited-focus-hover-active\"的顺序\n\n* 伪元素\n伪元素能够在文档中插入假象的元素，从而得到某种效果，常用的伪元素为:\n* :first-letter 会选中某元素第一行的第一个字母，并且文字所处的行之前没有其他内容\n* :first-line 会应用到某个块级元素的第一行，第一行的长度取决于很多因素，包括元素宽度，文本的文字的大小，:first-line 伪元素只能在块容器中,所以,:first-line伪元素只能在一个display值为`block`, `inline-block`, `table-cell` 或者 `table-caption`中有用。在其他的类型中，:first-line 是不起作用的。\n* :before 可以用来在某个元素之前插入指定的内容，并且可以用content，设置插入的内容和内容的样式\n* :after 可以用来在某个元素之后插入指定的内容，同before\n\n### 结构和层叠\n`继承`是指从一个元素向其后代元素传递属性值所采用的机制，而每一个合法的文档都会生成一个结构树，了解这一点，就能根据元素的祖先、属性、兄弟元素等等创建选择器来选择元素，有了这个结构树，选择器才能够起作用，这就是`继承`的核心所在。\n\n在确定要想要为元素应用那些值的时候，用户代理不仅要考虑继承，还要考虑声明的特殊性，另外需要考虑声明的来源，而这个过程就叫做`层叠`。\n\n这也是CSS的三个核心内容：`特殊性`，`继承`，`层叠`\n\n#### 特殊性\n应用到同一个元素上的多个CSS规则，浏览器会计算选择器的特殊性，并将这个特殊性附加到规则中的各个声明，如果一个元素有两个或者多个冲突的属性声明，那么最高特殊性的声明就会胜出。\n\n选择器的特殊性由选择器本身的组件确定。特殊性值表述为4个部分，如：0，0，0，0。\n\n一个选择器的具体啊特殊性如下确定：\n* 对于选择器中给定的各个id属性值，加0，1，0，0\n* 对于选择器中给定的各个类属性值、属性选择或者伪类，加\n\n### 值和单位\n#### 长度单位\n所有的长度单位都可以表示为正数和负数，其后跟一个两个字母缩写的长度单位，例如in(英寸)或pt(点)，不过长度为0的时候不需要单位。\n\n长度单位可以规划为两类：绝对长度单位和相对长度单位。\n\n**绝对长度单位**\n绝对长度单位比较好理解，就是现实世界中的实际长度，不过web中很少用到绝对长度单位。\n* 英寸(in)\n    是指美国尺子上常用的度量单位，奇葩中的奇葩，全世界仅此一家\n* 厘米(cm)\n    世界通用长度单位，和上面的英寸的换算规则为:1in=2.54cm\n* 毫米(mm)\n    世界通用长度单位，1mm=0.1cm\n* 点(pt)\n    点是一个标准印刷度量单位，在打印机和打字机上已经使用了数十年，一般来说一英寸是72点，那么`p{font-size:18pt}`就等价于`p{font-size:.25in}\n\n**相对长度单位**\n相对单位之所以得名，是他们的值是根据其他事物的关系计算得来的，而不是现实世界中实际长度\n#### 像素\n* px\ncss中的px,是让很多前端同学备受折麽的单位，毕竟1px,到底是多长呢，在不同的电脑上不一样，不同的手机上不一样，到底怎么回事，怎么计算呢？真是让人头大，想象一下常见的对话场景：\n\n切图仔：设计稿做好发给你了。\nBUG仔：好哒，我看看。\nBUG仔：What is this FXXX? 为啥你的设计稿是640px宽，iphone5不是320px宽吗?\n切图仔：This pixel is not your pixel!\nBUG仔：What is this FXXX?\n\n为什么会出现以上的情况，难道是他们当中的有个人出错了？\n\n实际上他们都是对的，只是他们谈论的不是一个`像素`\n\n此像素非彼像素\n\n* 设备像素(device pixel)\n设备像素是一个实际的物理概念，指的是设备中使用的物理像素，如果有一个设备，那么这个设备的设备像素就是固定的，例如:iphone5的设备像素是640 x 1136,MacBook Pro 13in的设备像素是2560 x 1600。\n* CSS像素(css pixel)\nCSS像素是Web编程的概念，指的是CSS样式代码中使用的逻辑像素，CSS中的px是一个相对单位，相对的是设备像素(device pixel)，也可以理解为js中的map(映射)的关系。\n举个例子看一下，设备像素是怎么映射到CSS像素的。\niPhone5使用的是Retina视网膜屏幕(先不管这个名字)，使用2 x 2的device pixel 代表 1 x 1的CSS pixel,所以设备像素是640 x 1136,而CSS逻辑像素是320 x 568px\n\n<div style=\"text-align:center;margin-top:20px\" align=\"center\">\n  <img style=\"height:200px;\" src=\"../images/devicePx-cssPx.png\" />\n</div>   \n\n设备像素比(device pixel ratio)可以通过`window.devicePixelRatio`来读取，获得设备像素比，便可得知设备像素与CSS像素之间的比例。当这个比率为1:1时，使用1个设备像素显示1个CSS像素，当这个比率为2:1的时候，使用4个像素设备显示1个CSS像素，当这个比率为3:1的时候，使用9个设备像素显示一个CSS像素 \n\n主流设备的设备像素比可以参照[http://screensiz.es/](http://screensiz.es/)\n\n了解了上面的知识之后，切图仔和BUG仔的矛盾便会迎刃而解：\n设计师一般按照设备像素(device pixel)为单位制作设计稿\n前端工程师拿到设计稿之后，根据设备像素比，进行换算成CSS像素\n\n* em\n在CSS中，1个em定义为一种给定字体的font-size值，也就是说，如果一个元素的`font-size`为14px,那么对于该元素，1em就等于14px,2em等于28px;\n\n最常见的一个误解是em是相对于父元素的字体大小，这个错误的发生原因是，大部分元素的字体大小是继承自父元素的，但是如果该元素单独设定了`font-size`属性的值，则1em将不等于父元素的`font-size`。\n* rem\n当使用rem作为单位的时候，根据根元素字体的`font-size`来计算px值。\n其对应的像素值为根元素(html)的`font-size` x rem值，例如：如果设定`html { font-size : 14px }`,那么任意一个子元素，只要设定了`font-size:2em`那么字体大小就是28px。\n\nem,rem都是与字体相关的长度单位，那么何时使用em,rem呢?\n\n可以使用em设置当前元素的padding,margin,line-height等值，与当前字体大小成正比，对文字排版很重要\n\n在移动端开发的时候，当不需要元素的尺寸、间距与当前的字体成正比，那么就可以选择使用rem,通过控制跟元素的`font-size`,让页面在各种尺寸的移送设备上自适应。\n\n**与视口相关的长度单位**\n视口相关的长度值相对于初始包含块的大小，也可以理解为相对于浏览器的宽高。当用户拖动浏览器的大小的时候，他们会相应的缩放\n* vh\n布局视口高度的1/100\n* vw\n布局视口宽度的1/100\n* vmin \n布局视口宽度和高度较小值的1/100\n* vmax\n布局视口宽度和高度较大值的1/100\n\n#### 百分比\n从小学就学过百分比也是一个相对值(我有巴菲特1%的财富，也是个超级富豪了)，在CSS世界里，百分数可以是相对于同一个元素的另一个属性的值，也可以是从父元素继承的一个值，或者是祖先元素的一个值。\n\n对于没有经验的小白来说，CSS中的各种百分比都是相对于谁，是个和让人都头疼和混淆的问题：\n* 相对于父元素宽度\n[max/min-] width,left,right,padding,margin\n* 相对于父元素高度\n[max/min-] height,top,bottom\n* 相对与继承字体大小\nfont-size:也就是如果父元素的`font-size:12px`,子元素`font-size:200%`,则子元素的字体实际大小为24px\n* 相对于自身字体大小\nline-height:一个元素自身`font-size:12px;line-height:200%`,那么`line-height`属性的实际值为24px\n* 相对于自身宽高的\nborder-radius,background-size,transform:translate()\n\n如果一个元素自身设置`position:absolute`,父元素是指：相对于离它最近的那个 position 不为 static 的祖先元素，如果没有这样的元素，则相对于视口。\n\n如果 position: fixed，父元素指视口（父级不存在 transform 为非 none 值的情况下）。\n\n\n### 字体\n* 在使用`font-family`的时候，如果字体名字中包含一个或者多个空格，或者字体名包含`#`、`$`等之类的特殊字符的时候，建议用引号把该字体名称包裹起来\n* `font-size`属性与你看到的实际字体大小之间的关系由字体的设计者来确定。这种关系设置为字体本身中的一个em方框，一般来说，定义字体时可能要求所有的字符都小于其em方框，(不是所有的字体都是这样的)\n* `font-size`百分数值总是根据从父元素继承的值(而不是百分数)来计算，举例来说就是`<p style='font-size:10px'>hello <em style='font-size:150%'>world</em></p>`,那么em元素继承的值是15px,根据声明值`150%`，计算得知，最后的值为10px x 150% = 15px;\n* font属性可以统一处理应用到字体上的多种属性。其中有个重要的规则是：必须以`font-size`和`font-family`作为声明的最后两个值，而且这两个值是必须的(如果少了其中某个属性，则浏览器会忽略掉整个规则)。前面的其他属性值，则没有特殊的顺序要求。\n* `line-height`:尽管`line-height`是一个文本属性而并非字体属性，但是可以使用`font`属性来设置`line-height`,可以作为`font-size`值的一个补充，并用一个斜线(/)分割开来。例如：`body { font-size : 12px } h1 { font : 200%/1.2,sans-serif}`,例子中h1元素的`font-size`被设置为24px,`line-height`被设置为30px。\n* 字体下载，使用`@font-face`属性可以在文档中下载一个远程字体来使用，要声明一个下载字体，可以使用如下规则：\n``` css\n@font-face {\n    font-family:'hello-world',\n    src:url(http://www.a.com/a.ps)\n}\n```\n这样既可以在后面的css中使用`font-family:hello-world`作为字体名称了。\n\n### 文本属性\n#### 文本水平对齐\n`text-align`属性会导致元素中的文本分别靠左，靠右，居中对齐等，该属性只能应用于块级元素。\n#### 垂直对齐\n在看文本垂直对齐之前，先来学习一个常见的属性**`line-height`**,是指文本基线之间的距离，而不是字体的大小，她确定了将各个元素框的高度增加或者减少多少。\n\n我们对于`line-height`最常见的使用方法就是增加或者减少文本行之间的垂直间隔。其实不然，文件之间的垂直距离是有行间距来控制的，而所谓的行间距就是文本的`line-height`属性值减去文本的`font-size`值之后的来的，行间距大多数的情况下都是一个正数，但是有时候也可以是一个负数，然后行间距再处以2，将行间距的一半分别应用到内容区的顶部和底部。\n\n举个例子来说，假设`font-size`为14px,`line-height`为18px,则浏览器会在文本内容区的顶部和底部分别添加一个2px的空白区，作为间距。\n\n`line-height`是有继承性的，当一个块级元素从另一个元素继承`line-height`时，问题会更复杂。`line-height`从父元素继承的时候，要从父元素计算，而不是在子元素上继承。看个例子：\n``` css\nbody { font-size : 10px}\ndiv { line-height : 1em}\np { font-size : 18px}\n```\n实际上`p`标签内的元素会上下挤成一团，为什么会造成这个现象呢？我们来分析一下：首先`div`会从body上继承`font-size`属性，也就是说`div`的`font-size`为10px,那么div的`line-height`也就是10px(1em === 当前元素的font-size值)，那么`p`元素也就是从`div`上继承的`line-height`为10px。那么`p`元素的内容会上下挤成一团也就很好理解了。\n\n那么怎么解决这个问题呢？首先最简单的办法就是显式的为每个元素设置一个`line-height`属性值。更好的方法是为`line-height`设定一个缩放因子:`line-height:1`。\n\n当指定一个数字的时候，缩放因子将是继承值而不是计算值。这个数会应用到该元素及其所有子元素，所以每个子元素都会根据自己的`font-size`来计算`line-height`。\n\n#### vertical-align\n* baseline,这个是默认值\n\n#### 浏览器前缀\n最常见的浏览器前缀例如：Firefox的`-moz-`,IE的`-ms-`,Opera的`-o-`,Safari和Chrome的`-webkit-`。\n\n浏览器前缀的原本目的是浏览器厂商为了实验一部分的新功能，而特殊添加的，网页开发者可以自由的尝试这些加了前缀的特性，并把试用结果反馈给工作组，而工作组随后会将这些反馈吸收到规范中，并逐渐完善该项特性的设计，最终演化为一个标准版本。\n\n然而，理想很美好，现实很残酷！\n\n当开发者发现这些实验性的、加了前缀的属性可以轻而易举地 实现以前大费周章才能达到的效果时，他们就开始滥用了。这些加了浏览器 前缀的属性迅速成为 CSS 领域的一大潮流。网上的教程会写到它们，Stack Overflow 上的问答会提到它们......很快，几乎每个有上进心的 CSS 开发者 都开始争先恐后地使用它们。\n\n由于网页开发者使用无前缀的属性是想确保代码的向前兼容，那么工作组想要修改这些无前缀语法就变得不可能了。我们基本上就跟这些半生不熟的早期规范绑在一起了，只能通过极其有限的途径来修改它们。用不了多久，这个“坑”里的每个人就会意识到，**浏览器前缀已是一场史诗般的失败**。\n\n最近，浏览器厂商已经很少以前缀的方式来实验性地实现新特性了。取而代之的是，这些实验性特性需要通过配置开关来启用，这可以有效防止开发者在生产环境中使用它们，因为你不能要求用户为了正确地浏览你的网站而去修改浏览器设置。当然，这会导致一个后果:尝试这些实验性特性的开发者会减少;但我们仍然会得到足够多的反馈，甚至是更高质量的反馈，同时还避免了浏览器前缀的所有缺点。不过我们还需要很长 的时间，才能从浏览器前缀所引发的涟漪效应中解脱出来。\n",[[1526549032635,["sylvenas@little-frest.local",[[1,8338,"，会要求一个月素的"]],[8338,8338],[8347,8347]]],[1526549033296,["sylvenas@little-frest.local",[[-1,8344,"月素的"]],[8347,8347],[8344,8344]]],[1526549043083,["sylvenas@little-frest.local",[[1,8344,"元素的基线预期"]],[8344,8344],[8351,8351]]],[1526549043714,["sylvenas@little-frest.local",[[-1,8349,"预期"]],[8351,8351],[8349,8349]]],[1526549047990,["sylvenas@little-frest.local",[[1,8349,"与其父元素的"]],[8349,8349],[8355,8355]]],[1526549053658,["sylvenas@little-frest.local",[[1,8355,"基线对齐"]],[8355,8355],[8359,8359]]],[1526549082775,["sylvenas@little-frest.local",[[1,8359,"，这也是大多数情况是我们对文本内容所做的。"]],[8359,8359],[8380,8380]]],[1526549084137,["sylvenas@little-frest.local",[[-1,8379,"。"]],[8380,8380],[8379,8379]]],[1526549085397,["sylvenas@little-frest.local",[[1,8379,"，"]],[8379,8379],[8380,8380]]],[1526549085943,["sylvenas@little-frest.local",[[-1,8379,"，"]],[8380,8380],[8379,8379]]],[1526549087223,["sylvenas@little-frest.local",[[1,8379,"()"]],[8379,8379],[8381,8381]]],[1526549087809,["sylvenas@little-frest.local",[[-1,8379,"()"]],[8381,8381],[8379,8379]]],[1526549088670,["sylvenas@little-frest.local",[[1,8379,"()"]],[8379,8379],[8381,8381]]],[1526549089444,["sylvenas@little-frest.local",[[1,8380,"da"]],[8380,8380],[8382,8382]]],[1526549090062,["sylvenas@little-frest.local",[[-1,8380,"da"]],[8382,8382],[8380,8380]]],[1526549093318,["sylvenas@little-frest.local",[[1,8380,"大部分额"]],[8380,8380],[8384,8384]]],[1526549094756,["sylvenas@little-frest.local",[[-1,8383,"额"]],[8384,8384],[8383,8383]]],[1526549107099,["sylvenas@little-frest.local",[[1,8383,"的文字都是需要"]],[8383,8383],[8390,8390]]],[1526549107573,["sylvenas@little-frest.local",[[-1,8388,"需要"]],[8390,8390],[8388,8388]]],[1526549114428,["sylvenas@little-frest.local",[[1,8388,"需要一行总的"]],[8388,8388],[8394,8394]]],[1526549114878,["sylvenas@little-frest.local",[[-1,8392,"总的"]],[8394,8394],[8392,8392]]],[1526549124185,["sylvenas@little-frest.local",[[1,8392,"中的所有元素地段对齐"]],[8392,8392],[8402,8402]]],[1526549125215,["sylvenas@little-frest.local",[[-1,8398,"地段对齐"]],[8402,8402],[8398,8398]]],[1526549130521,["sylvenas@little-frest.local",[[1,8398,"底端对齐"]],[8398,8398],[8402,8402]]],[1526549133123,["sylvenas@little-frest.local",[[1,8405,"\n"]],[8404,8404],[8405,8405]]],[1526549134922,["sylvenas@little-frest.local",[[1,8405,"* "]],[8405,8405],[8407,8407]]],[1526549136332,["sylvenas@little-frest.local",[[1,8408,"\n"]],[8407,8407],[8408,8408]]],[1526549137972,["sylvenas@little-frest.local",[[-1,8404,"\n"]],[8405,8405],[8404,8404]]],[1526549140580,["sylvenas@little-frest.local",[[1,8408,"\n"]],[8406,8406],[8407,8407]]],[1526549140738,["sylvenas@little-frest.local",[[1,8409,"\n"]],[8407,8407],[8408,8408]]],[1526549140897,["sylvenas@little-frest.local",[[1,8410,"\n"]],[8408,8408],[8409,8409]]],[1526549141021,["sylvenas@little-frest.local",[[1,8411,"\n"]],[8409,8409],[8410,8410]]],[1526549153669,["sylvenas@little-frest.local",[[1,8406,"sub/sup"]],[8406,8406],[8413,8413]]],[1526549157064,["sylvenas@little-frest.local",[[1,8413,","]],[8413,8413],[8414,8414]]],[1526549185780,["sylvenas@little-frest.local",[[1,8414,"sub意味着一个元素相对于其父元素的基线将其"]],[8414,8414],[8436,8436]]],[1526549186437,["sylvenas@little-frest.local",[[-1,8434,"将其"]],[8436,8436],[8434,8434]]],[1526549203153,["sylvenas@little-frest.local",[[1,8434,"降低，sup则是相对于其父元素的基线上升，"]],[8434,8434],[8455,8455]]],[1526549245647,["sylvenas@little-frest.local",[[1,8455,"而这个上升和下降的具体数值一般都"]],[8455,8455],[8471,8471]]],[1526549246153,["sylvenas@little-frest.local",[[-1,8470,"都"]],[8471,8471],[8470,8470]]],[1526549253522,["sylvenas@little-frest.local",[[1,8470,"由浏览器决定。"]],[8470,8470],[8477,8477]]],[1526549310493,["sylvenas@little-frest.local",[[1,8483,"\n"]],[8477,8477],[8478,8478]]],[1526549313635,["sylvenas@little-frest.local",[[1,8478,"* bottom"]],[8478,8478],[8486,8486]]],[1526549317148,["sylvenas@little-frest.local",[[1,8486,"/top,"]],[8486,8486],[8491,8491]]],[1526549328659,["sylvenas@little-frest.local",[[1,8491,"fe"]],[8491,8491],[8493,8493]]],[1526549331058,["sylvenas@little-frest.local",[[-1,8491,"fe"]],[8493,8493],[8491,8491]]],[1526549366833,["sylvenas@little-frest.local",[[1,8491,"bottom将元素的"]],[8491,8491],[8501,8501]]],[1526549367361,["sylvenas@little-frest.local",[[-1,8500,"的"]],[8501,8501],[8500,8500]]],[1526549376386,["sylvenas@little-frest.local",[[1,8500,"行内框的"]],[8500,8500],[8504,8504]]],[1526549379314,["sylvenas@little-frest.local",[[1,8504,"底端于"]],[8504,8504],[8507,8507]]],[1526549381911,["sylvenas@little-frest.local",[[-1,8506,"于"]],[8507,8507],[8506,8506]]],[1526549392111,["sylvenas@little-frest.local",[[1,8506,"与行框的底端对齐"]],[8506,8506],[8514,8514]]],[1526549410155,["sylvenas@little-frest.local",[[1,8514,"，top则相反"]],[8514,8514],[8521,8521]]],[1526549413931,["sylvenas@little-frest.local",[[-1,8519,"相反"]],[8521,8521],[8519,8519]]],[1526549428778,["sylvenas@little-frest.local",[[1,8519,"将元素的行内框 的顶端与行框"]],[8519,8519],[8533,8533]]],[1526549430693,["sylvenas@little-frest.local",[[-1,8526," "]],[8527,8527],[8526,8526]]],[1526549438049,["sylvenas@little-frest.local",[[1,8532,"的顶端对齐"]],[8532,8532],[8537,8537]]],[1526549439380,["sylvenas@little-frest.local",[[1,8537,"。"]],[8537,8537],[8538,8538]]],[1526549439827,["sylvenas@little-frest.local",[[1,8544,"\n"]],[8538,8538],[8539,8539]]],[1526549449916,["sylvenas@little-frest.local",[[1,8539,"* middle"]],[8539,8539],[8547,8547]]],[1526549474946,["sylvenas@little-frest.local",[[1,8547,":"]],[8547,8547],[8548,8548]]],[1526549505017,["sylvenas@little-frest.local",[[1,8548,"changch"]],[8548,8548],[8555,8555]]],[1526549508322,["sylvenas@little-frest.local",[[-1,8547,":changch"]],[8555,8555],[8547,8547]]],[1526549516190,["sylvenas@little-frest.local",[[1,8547,":常常应用于图像："]],[8547,8547],[8556,8556]]],[1526549566354,["sylvenas@little-frest.local",[[-1,8555,"："]],[8556,8556],[8555,8555]]],[1526549567348,["sylvenas@little-frest.local",[[1,8555,"，"]],[8555,8555],[8556,8556]]],[1526549584663,["sylvenas@little-frest.local",[[1,8556,"midle"]],[8556,8556],[8561,8561]]],[1526549585422,["sylvenas@little-frest.local",[[-1,8559,"le"]],[8561,8561],[8559,8559]]],[1526549585962,["sylvenas@little-frest.local",[[1,8559,"le"]],[8559,8559],[8561,8561]]],[1526549586998,["sylvenas@little-frest.local",[[-1,8559,"le"]],[8561,8561],[8559,8559]]],[1526549591739,["sylvenas@little-frest.local",[[1,8559,"dlewang"]],[8559,8559],[8566,8566]]],[1526549592498,["sylvenas@little-frest.local",[[-1,8562,"wang"]],[8566,8566],[8562,8562]]],[1526549605325,["sylvenas@little-frest.local",[[1,8562,"往往将元素的垂直中心点与父元素的"]],[8562,8562],[8578,8578]]],[1526549605705,["sylvenas@little-frest.local",[[-1,8577,"的"]],[8578,8578],[8577,8577]]],[1526549612598,["sylvenas@little-frest.local",[[1,8577,"基线上方，"]],[8577,8577],[8582,8582]]],[1526549613258,["sylvenas@little-frest.local",[[-1,8581,"，"]],[8582,8582],[8581,8581]]],[1526549617412,["sylvenas@little-frest.local",[[1,8581,"0.25emchu"]],[8581,8581],[8590,8590]]],[1526549618177,["sylvenas@little-frest.local",[[-1,8587,"chu"]],[8590,8590],[8587,8587]]],[1526549621747,["sylvenas@little-frest.local",[[1,8587,"处的土匪"]],[8587,8587],[8591,8591]]],[1526549622689,["sylvenas@little-frest.local",[[-1,8589,"土匪"]],[8591,8591],[8589,8589]]],[1526549624660,["sylvenas@little-frest.local",[[1,8589,"一个ID那"]],[8589,8589],[8594,8594]]],[1526549625781,["sylvenas@little-frest.local",[[-1,8591,"ID那"]],[8594,8594],[8591,8591]]],[1526549629072,["sylvenas@little-frest.local",[[1,8591,"点对齐"]],[8591,8591],[8594,8594]]],[1526549658706,["sylvenas@little-frest.local",[[1,8595,"。"]],[8595,8595],[8596,8596]]],[1526549755414,["sylvenas@little-frest.local",[[1,8601,"\n"]],[8597,8597],[8598,8598]]],[1526549764005,["sylvenas@little-frest.local",[[1,8598,"其他常用的文分"]],[8598,8598],[8605,8605]]],[1526549764449,["sylvenas@little-frest.local",[[-1,8603,"文分"]],[8605,8605],[8603,8603]]],[1526549770945,["sylvenas@little-frest.local",[[1,8603,"文本元素的属性包括："]],[8603,8603],[8613,8613]]],[1526549776913,["sylvenas@little-frest.local",[[1,8613,"文本转换（0"]],[8613,8613],[8619,8619]]],[1526549777380,["sylvenas@little-frest.local",[[-1,8617,"（0"]],[8619,8619],[8617,8617]]],[1526549780464,["sylvenas@little-frest.local",[[1,8617,"(),we"]],[8617,8617],[8622,8622]]],[1526549780894,["sylvenas@little-frest.local",[[-1,8620,"we"]],[8622,8622],[8620,8620]]],[1526549786415,["sylvenas@little-frest.local",[[1,8620,"文本化纤"]],[8620,8620],[8624,8624]]],[1526549787243,["sylvenas@little-frest.local",[[-1,8622,"化纤"]],[8624,8624],[8622,8622]]],[1526549788625,["sylvenas@little-frest.local",[[1,8622,"huaxia"]],[8622,8622],[8628,8628]]],[1526549790031,["sylvenas@little-frest.local",[[-1,8622,"huaxia"]],[8628,8628],[8622,8622]]],[1526549791347,["sylvenas@little-frest.local",[[1,8622,"化纤"]],[8622,8622],[8624,8624]]],[1526549792358,["sylvenas@little-frest.local",[[-1,8622,"化纤"]],[8624,8624],[8622,8622]]],[1526549808353,["sylvenas@little-frest.local",[[1,8622,"装饰(),阴影()deng"]],[8622,8622],[8635,8635]]],[1526549809086,["sylvenas@little-frest.local",[[-1,8631,"deng"]],[8635,8635],[8631,8631]]],[1526549813925,["sylvenas@little-frest.local",[[1,8631,"等比较简答"]],[8631,8631],[8636,8636]]],[1526549816194,["sylvenas@little-frest.local",[[-1,8634,"简答"]],[8636,8636],[8634,8634]]],[1526549818178,["sylvenas@little-frest.local",[[1,8634,"简单。"]],[8634,8634],[8637,8637]]],[1526549834744,["sylvenas@little-frest.local",[[1,8613,"自建哥"]],[8613,8613],[8616,8616]]],[1526549835609,["sylvenas@little-frest.local",[[-1,8613,"自建哥"]],[8616,8616],[8613,8613]]],[1526549836182,["sylvenas@little-frest.local",[[1,8613,"ji"]],[8613,8613],[8615,8615]]],[1526549837158,["sylvenas@little-frest.local",[[-1,8613,"ji"]],[8615,8615],[8613,8613]]],[1526549843102,["sylvenas@little-frest.local",[[1,8613,"字间隔（）"]],[8613,8613],[8618,8618]]],[1526549843615,["sylvenas@little-frest.local",[[-1,8616,"（）"]],[8618,8618],[8616,8616]]],[1526549846354,["sylvenas@little-frest.local",[[1,8616,"(),zi"]],[8616,8616],[8621,8621]]],[1526549846879,["sylvenas@little-frest.local",[[-1,8619,"zi"]],[8621,8621],[8619,8619]]],[1526549848929,["sylvenas@little-frest.local",[[1,8619,"字母键哥"]],[8619,8619],[8623,8623]]],[1526549850116,["sylvenas@little-frest.local",[[-1,8621,"键哥"]],[8623,8623],[8621,8621]]],[1526549853633,["sylvenas@little-frest.local",[[1,8621,"间隔*（"]],[8621,8621],[8625,8625]]],[1526549854549,["sylvenas@little-frest.local",[[-1,8623,"*（"]],[8625,8625],[8623,8623]]],[1526549855490,["sylvenas@little-frest.local",[[1,8623,"（），"]],[8623,8623],[8626,8626]]],[1526549856986,["sylvenas@little-frest.local",[[-1,8661,"器前缀"]],[8664,8664],[8661,8661]]],[1526549858065,["sylvenas@little-frest.local",[[1,8661,"器前缀"]],[8661,8661],[8664,8664]]],[1526549860364,["sylvenas@little-frest.local",[[-1,8623,"（），"]],[8626,8626],[8623,8623]]],[1526549862773,["sylvenas@little-frest.local",[[1,8623,"(),"]],[8623,8623],[8626,8626]]],[1526549885545,["sylvenas@little-frest.local",[[1,8617,"word="]],[8617,8617],[8622,8622]]],[1526549889911,["sylvenas@little-frest.local",[[1,8622,"spacings"]],[8622,8622],[8630,8630]]],[1526549891725,["sylvenas@little-frest.local",[[-1,8621,"="]],[8622,8622],[8621,8621]]],[1526549892124,["sylvenas@little-frest.local",[[1,8621,"-"]],[8621,8621],[8622,8622]]],[1526549894177,["sylvenas@little-frest.local",[[-1,8629,"s"]],[8630,8630],[8629,8629]]],[1526549914630,["sylvenas@little-frest.local",[[1,8636,"letter-spacing"]],[8636,8636],[8650,8650]]],[1526549945175,["sylvenas@little-frest.local",[[1,8654,"da"]],[8654,8654],[8656,8656]]],[1526549945662,["sylvenas@little-frest.local",[[-1,8654,"da"]],[8656,8656],[8654,8654]]],[1526549947578,["sylvenas@little-frest.local",[[1,8654,"大小写"]],[8654,8654],[8657,8657]]],[1526549956595,["sylvenas@little-frest.local",[[1,8660,"text-transform"]],[8660,8660],[8674,8674]]],[1526549977164,["sylvenas@little-frest.local",[[1,8681,"text-decoration"]],[8681,8681],[8696,8696]]],[1526549997081,["sylvenas@little-frest.local",[[-1,8701,")"],[1,8702,"text-)"]],[8701,8702],[8707,8707]]],[1526550000496,["sylvenas@little-frest.local",[[1,8706,"shadow"]],[8706,8706],[8712,8712]]],[1526550005273,["sylvenas@little-frest.local",[[1,8723,"\n"]],[8719,8719],[8720,8720]]],[1526550005793,["sylvenas@little-frest.local",[[1,8724,"\n"]],[8720,8720],[8721,8721]]],[1526550041084,[null,[[-1,8594,"\n"]],[8594,8594],[8594,8594]]],[1526550041084,[null,[[1,8594,"\n"]],[8594,8594],[8594,8594]]],[1526550040457,["sylvenas@little-frest.local",[[-1,8594,"\n"]],[8595,8595],[8594,8594]]],[1526608846043,["sylvenas@little-frest.local",[[1,8720,"####\\"]],[8720,8720],[8725,8725]]],[1526608846770,["sylvenas@little-frest.local",[[-1,8723,"#\\"]],[8725,8725],[8723,8723]]],[1526608847655,["sylvenas@little-frest.local",[[1,8723," he"]],[8723,8723],[8726,8726]]],[1526608848720,["sylvenas@little-frest.local",[[-1,8724,"he"]],[8726,8726],[8724,8724]]],[1526608850323,["sylvenas@little-frest.local",[[1,8724,"和模型"]],[8724,8724],[8727,8727]]],[1526608851013,["sylvenas@little-frest.local",[[-1,8724,"和模型"]],[8727,8727],[8724,8724]]],[1526608854651,["sylvenas@little-frest.local",[[1,8724,"盒模型"]],[8724,8724],[8727,8727]]],[1526608855729,["sylvenas@little-frest.local",[[1,8731,"\n"]],[8727,8727],[8728,8728]]],[1526608862190,["sylvenas@little-frest.local",[[1,8728,"#### 阜外编剧"]],[8728,8728],[8737,8737]]],[1526608863182,["sylvenas@little-frest.local",[[-1,8733,"阜外编剧"]],[8737,8737],[8733,8733]]],[1526608868559,["sylvenas@little-frest.local",[[1,8733,"负外边句"]],[8733,8733],[8737,8737]]],[1526608872545,["sylvenas@little-frest.local",[[-1,8734,"外边句"]],[8737,8737],[8734,8734]]],[1526608880394,["sylvenas@little-frest.local",[[1,8734,"外边距"]],[8734,8734],[8737,8737]]],[1526608881867,["sylvenas@little-frest.local",[[1,8741,"\n"]],[8737,8737],[8738,8738]]]]]]}